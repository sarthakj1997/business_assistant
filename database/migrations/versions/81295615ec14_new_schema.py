"""new schema

Revision ID: 81295615ec14
Revises: 8fc33598452e
Create Date: 2025-07-30 18:16:36.309099

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '81295615ec14'
down_revision: Union[str, Sequence[str], None] = '8fc33598452e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('invoices', sa.Column('order_id', sa.String(), nullable=False))
    op.add_column('invoices', sa.Column('customer_id', sa.String(), nullable=True))
    op.add_column('invoices', sa.Column('contact_name', sa.String(), nullable=True))
    op.add_column('invoices', sa.Column('address', sa.String(), nullable=True))
    op.add_column('invoices', sa.Column('city', sa.String(), nullable=True))
    op.add_column('invoices', sa.Column('postal_code', sa.String(), nullable=True))
    op.add_column('invoices', sa.Column('country', sa.String(), nullable=True))
    op.add_column('invoices', sa.Column('customer_phone', sa.String(), nullable=True))
    op.add_column('invoices', sa.Column('customer_fax', sa.String(), nullable=True))
    op.add_column('invoices', sa.Column('total_price', sa.Float(), nullable=False))
    op.create_unique_constraint(None, 'invoices', ['order_id'])
    op.drop_column('invoices', 'currency')
    op.drop_column('invoices', 'vendor_name')
    op.drop_column('invoices', 'due_date')
    op.drop_column('invoices', 'tax')
    op.drop_column('invoices', 'subtotal')
    op.drop_column('invoices', 'customer_address')
    op.drop_column('invoices', 'purchase_order')
    op.drop_column('invoices', 'invoice_number')
    op.drop_column('invoices', 'shipping')
    op.drop_column('invoices', 'payment_terms')
    op.drop_column('invoices', 'payment_method')
    op.drop_column('invoices', 'vendor_address')
    op.drop_column('invoices', 'total')
    op.drop_column('invoices', 'customer_name')
    op.add_column('line_items', sa.Column('product_id', sa.String(), nullable=True))
    op.add_column('line_items', sa.Column('product_name', sa.Text(), nullable=False))
    op.add_column('line_items', sa.Column('confidence_score', sa.Float(), nullable=True))
    op.alter_column('line_items', 'invoice_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('line_items', 'quantity',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Integer(),
               existing_nullable=True)
    op.alter_column('line_items', 'line_total',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.drop_constraint(op.f('line_items_invoice_id_fkey'), 'line_items', type_='foreignkey')
    op.create_foreign_key(None, 'line_items', 'invoices', ['invoice_id'], ['id'], ondelete='CASCADE')
    op.drop_column('line_items', 'description')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('line_items', sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'line_items', type_='foreignkey')
    op.create_foreign_key(op.f('line_items_invoice_id_fkey'), 'line_items', 'invoices', ['invoice_id'], ['id'])
    op.alter_column('line_items', 'line_total',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('line_items', 'quantity',
               existing_type=sa.Integer(),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=True)
    op.alter_column('line_items', 'invoice_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('line_items', 'confidence_score')
    op.drop_column('line_items', 'product_name')
    op.drop_column('line_items', 'product_id')
    op.add_column('invoices', sa.Column('customer_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('invoices', sa.Column('total', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
    op.add_column('invoices', sa.Column('vendor_address', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('invoices', sa.Column('payment_method', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('invoices', sa.Column('payment_terms', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('invoices', sa.Column('shipping', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('invoices', sa.Column('invoice_number', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('invoices', sa.Column('purchase_order', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('invoices', sa.Column('customer_address', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('invoices', sa.Column('subtotal', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('invoices', sa.Column('tax', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('invoices', sa.Column('due_date', sa.DATE(), autoincrement=False, nullable=True))
    op.add_column('invoices', sa.Column('vendor_name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('invoices', sa.Column('currency', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'invoices', type_='unique')
    op.drop_column('invoices', 'total_price')
    op.drop_column('invoices', 'customer_fax')
    op.drop_column('invoices', 'customer_phone')
    op.drop_column('invoices', 'country')
    op.drop_column('invoices', 'postal_code')
    op.drop_column('invoices', 'city')
    op.drop_column('invoices', 'address')
    op.drop_column('invoices', 'contact_name')
    op.drop_column('invoices', 'customer_id')
    op.drop_column('invoices', 'order_id')
    # ### end Alembic commands ###
